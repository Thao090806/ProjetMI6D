#ifndef LOGIC_O
#define LOGIC_O

#include "../include/settings.h"


int ask(int max) {
    int choix = -1;
    int result;

    do {
        printf(
            "\033[0m"
            "\033[38;5;214m"
            "\033[3m"
            "\nFaites votre choix (0-%d) ? "
            "\033[0m", max - 1
        );

        result = scanf("%d", &choix);

        if (result != 1 || choix < 0 || choix >= max) {
            printf(
                "\033[1;31m"
                "Votre choix est hors de portee. Essayez a nouveau entre 0 et %d.\n"
                "\033[0m", max - 1
            );
            while (getchar() != '\n');
        }
    } while (result != 1 || choix < 0 || choix >= max);

    return choix;
}

int show_fighters(Fighters fighters[], int nb_fighter) {
    printf("\n\033[1;33mForce et faiblesse... Saurez-vous trouver un equilibre ?\033[0m\n\n");

    for (int i = 0; i < nb_fighter; i++) {
        printf("\033[1;37m%d ~ %s\033[0m ", i, fighters[i].nom);

        printf(
            "("
            " PV: \033[1;33m%d/%d\033[0m,"
            " ATK: \033[1;33m%d\033[0m,"
            " DEF: \033[1;33m%d\033[0m,"
            " AGI: \033[1;33m%d\033[0m,"
            " VIT: \033[1;33m%d\033[0m)\n",
               fighters[i].pv_courant, fighters[i].pv_max, 
               fighters[i].attaque, fighters[i].defense, 
               fighters[i].agilite, fighters[i].vitesse);

        printf("  Competences ~ ");
        for (int j = 0; j < fighters[i].nb_skills; j++) {
            printf("\033[90m(\033[0m\033[1;37m%s\033[0m\033[90m)\033[0m ", fighters[i].skills[j].nom);
        }
        printf("\n");
    }

    return nb_fighter;
}

int select_fighter(int nb_fighters) {
    return ask(nb_fighters);
}

void select_team(Fighters fighters[], int nb_fighters, Teams team[]) {

    printf(
        "\033[0m"
        "\033[38;5;214m"
        "\033[3m"
        "\nQuel sera le nom de votre equipe ? "
        "\033[0m"
    );

    char tmp[MAX_CARATERES];
    scanf("%s", tmp);

    int n = strlen(tmp);
    if (n > MAX_CARATERES) {
        printf("\033[1;31m"
               "Hmm ... C'est bien trop long.\n"
               "\033[0m", MAX_CARATERES);
        exit(1);
    }

    (*team).nom = malloc(sizeof(char) * (n + 1));
    strcpy((*team).nom, tmp);

    int selected_indices[MAX_MEMBRES] = {-1, -1, -1};
    for (int i = 0; i < MAX_MEMBRES; i++) {
        printf(
            "\033[1;37m"
            "~ %d sur %d\n"
            "\033[0m", i + 1, MAX_MEMBRES
        );
        int entity_index = select_fighter(nb_fighters);

        int selected = 0;
        for (int j = 0; j < i; j++) {
            if (selected_indices[j] == entity_index) {
                selected = 1;
                break;
            }
        }

        if (selected == 1) {
            printf(
                "\033[1;31m"
                "%s est deja a vos cote.\n"
                "\033[0m" ,fighters[entity_index].nom
            );
            i--;
        } else {
            selected_indices[i] = entity_index;
            (*team).fighters[i] = fighters[entity_index];
            (*team).nb_membres++;
            printf(
                "\033[1;32m"
                "%s a desormais a vos cote.\n"
                "\033[0m", fighters[entity_index].nom
            );
        }
    }

    printf(
        "\033[1;33m"
        "\nAinsi "
        "\033[0m"
    );

    for (int i = 0; i < MAX_MEMBRES; i++) {
        printf("\033[1;37m"
               "%s "
               "\033[0m", (*team).fighters[i].nom);
    }

    printf(
        "\033[1;33m"
        "sont vos guerriers.\n\n"
        "\033[0m"
    );

    printf("\n");
}

int select_skill(Fighters fighters[], int fighter_index) {

    printf(
        "\033[0m"
        "\033[38;5;214m"
        "\033[3m"
        "%s,  de quel competence allez vous faire preuve ?\n"
        "\033[0m", fighters[fighter_index].nom
    );

    for (int i = 0; i < fighters[fighter_index].nb_skills; i++) {
        printf(
            "\033[1;37m%d ~ %s\033[0m "
            "  %d ~ %s : %s\n"
            "\033[0m", i, fighters[fighter_index].skills[i].nom, fighters[fighter_index].skills[i].description
        );
    }

    int choix = ask(fighters[fighter_index].nb_skills);

    return choix;
}

void load(Fighters entity[], Teams entity_team[], Teams enemy_team[]) {
    int nb_fighters = show_fighters(entity, MAX_ENTITYS);

    select_team(entity, nb_fighters, &entity_team[0]);
    select_team(entity, nb_fighters, &enemy_team[0]);

    printf("\n");

}
    

#endif