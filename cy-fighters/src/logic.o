#ifndef LOGIC_O
#define LOGIC_O

#include "../include/settings.h"

int show_fighters(Fighters fighters[],  int nb_fighter) {

    printf("\n");
    for (int i = 0; i < nb_fighter; i++) {
        printf("> %s - %s\n", fighters[i].nom, fighters[i].description);

        printf("\n  Statistique :\n");
        printf("  +  Point de vie : %d/%d\n  Attaque : %d\n  Defense : %d\n  Agilite : %d\n  Vitesse : %d\n", 
            fighters[i].pv_courant, 
            fighters[i].pv_max , 
            fighters[i].attaque, 
            fighters[i].defense, 
            fighters[i].agilite, 
            fighters[i].vitesse);

        printf("\n  Competences :\n");
        for(int j = 0; j < fighters[i].nb_skills; j++) { // Affichage des compétences
            printf("  + %s : %s\n   Valeur : %d\n   Tours actifs : %d\n   Tours recharge : %d\n",
                   fighters[i].skills[j].nom,
                   fighters[i].skills[j].description,
                   fighters[i].skills[j].coefficient,
                   fighters[i].skills[j].tours_actifs,
                   fighters[i].skills[j].tours_recharge);
        }
        printf("\n");
    }

    return nb_fighter;
}

int select_fighter(Fighters fighters[], int nb_fighters) {

    int choix = -1;

    while (1) {
        printf("Choisissez votre personnage (0-%d) : ", nb_fighters - 1);
        if (scanf("%d", &choix) == 1 && choix >= 0 && choix < nb_fighters) {
            break;
        } else {
            printf("Choix invalide. Veuillez entrer un nombre entre 0 et %d.\n", nb_fighters - 1);
            while (getchar() != '\n');
        }
    }
    
    return choix;
}

void select_team(Fighters fighters[], int nb_fighters, Teams team[]) {

    printf("Entrez le nom de votre equipe : ");
    char tmp[MAX_CARATERES];
    scanf("%s", tmp);

    int n = strlen(tmp);
    if (n > MAX_CARATERES) { 
        printf("Le nom de l'equipe est trop long. Il doit faire moins de %d caracteres.\n", MAX_CARATERES);
        exit(1);
    }
    
    (*team).nom = malloc(sizeof(char) * (n + 1));
    strcpy((*team).nom, tmp); 
    

    int selected_indices[MAX_MEMBRES] = {-1, -1, -1}; 
    for (int i = 0; i < MAX_MEMBRES; i++) {
        printf(">%d sur %d\nChoisissez un personnage pour votre equipe :\n", i + 1, MAX_MEMBRES);
        int entity_index = select_fighter(fighters, nb_fighters);

        
        int selected = 0;
        for (int j = 0; j < i; j++) {
            if (selected_indices[j] == entity_index) {
                selected = 1;
                break;
            }
        }

        if (selected == 1) {
            printf("Ce personnage est deja dans votre equipe. Veuillez en choisir un autre.\n");
            i--;
        } else {
            selected_indices[i] = entity_index;
            (*team).fighters[i] = fighters[entity_index];
            (*team).nb_membres++;
            printf("%s a ete ajoute à votre equipe.\n", fighters[entity_index].nom);
        }
    }

    printf("\nVotre equipe est composee  de ");
    for (int i = 0; i < MAX_MEMBRES; i++) {
        printf(", %s", (*team).fighters[i].nom);
    }
    printf(".\n");
}

int select_skill(Fighters fighters[], int fighter_index) {

    int choix = -1;

    while (1) {
        printf("> 0 a %d\nChoisissez votre competence : ", fighters[fighter_index].nb_skills - 1);
        if (scanf("%d", &choix) == 1 && choix >= 0 && choix < fighters[fighter_index].nb_skills) {
            break;
        } else {
            printf("Choix invalide. Veuillez entrer un nombre entre 0 et %d.\n", fighters[fighter_index].nb_skills - 1);
            while (getchar() != '\n'); // Nettoyer le buffer d'entrée
        }
    }

    printf("Vous avez choisi la competence %s !\n", fighters[fighter_index].skills[choix].nom);
    return choix; // Retourne l'index de la compétence sélectionnée
}

int load(Fighters entity[], Teams entity_team[], Teams enemy_team[]) {

    int nb_fighters = show_fighters(entity, MAX_ENTITYS);

    select_team(entity, nb_fighters, entity_team);
    select_team(entity, nb_fighters, enemy_team);

    return 0;
}
    

#endif